import tensorflow as tf
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image

# Load pre-trained FaceNet model
facenet_model = load_model('facenet_keras.h5')

def preprocess_image(image_path):
    img = Image.open(image_path).resize((160, 160))
    img = np.array(img)
    img = (img - 127.5) / 127.5
    img = np.expand_dims(img, axis=0)
    return img

def get_embedding(model, image_path):
    img = preprocess_image(image_path)
    embedding = model.predict(img)
    return embedding

# Get embeddings for the images
embedding1 = get_embedding(facenet_model, "/Users/User/OneDrive/Desktop/testphoto/img5.jpg")
embedding2 = get_embedding(facenet_model, "/Users/User/OneDrive/Desktop/testphoto/img6.jpg")

# Calculate distance
distance = np.linalg.norm(embedding1 - embedding2)
if distance < 0.6:  # You can adjust the threshold
    print(f"Images are similar with distance: {distance}")
else:
    print("Images are not similar")
